== Files and File Organization ==

* All header files should use the .h extension and all source files should use .cpp
* Header files should not contain any function implementations; they should be placed in a source file with the same 
  name
* The order of the declarations in the header file should match the order of the implementations in the source file

== Types ==

* Use standard types when possible
* All generic containers should be explicitly defined as a type e.g. typedef std::vector<int> IntVector

== Pointers and References ==

The general rule is to use references in all situations where the sender/reciever do not have to worry about 
where in memory the object resides, and if the memory needs to be deallocated. A pointer should be used in all cases
where the client is responsible for clearing the memory. A pointer should also be used when passing an interface
implementation pointer.

== Naming Conventions ==

* Use descriptive names 
* All class names should use UpperCamelCase
* All private members should use lowerCamelCase and all public members should use UpperCamelCase
